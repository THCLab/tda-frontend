#!/bin/bash

#get highest tag number
VERSION=`git tag -l --sort=version:refname | tail -n 1`

#replace . with space so can split into an array
VERSION_BITS=(${VERSION//./ })

#get number parts and increase last one by 1
VNUM1=${VERSION_BITS[0]:1}
VNUM2=${VERSION_BITS[1]}
VNUM3=${VERSION_BITS[2]}

#bump version
if [ $# -eq 0 ]; then
  VNUM3=$((VNUM3+1))
else
  if [ $1 == 'major' ]; then
    VNUM1=$((VNUM1+1))
    VNUM2=0
    VNUM3=0
  elif [ $1 == 'minor' ]; then
    VNUM2=$((VNUM2+1))
    VNUM3=0
  elif [ $1 == 'patch' ]; then
    VNUM3=$((VNUM3+1))
  else
    echo "Unaccepted argument. Provide ['major' | 'minor' | 'patch']"
    exit
  fi
fi

#create new tag
NEW_TAG="v$VNUM1.$VNUM2.$VNUM3"

#get current hash and see if it already has a tag
GIT_COMMIT=`git rev-parse HEAD`
NEEDS_TAG=`git describe --contains $GIT_COMMIT 2>/dev/null`

#only tag if no tag already
if [ -z "$NEEDS_TAG" ]; then
    echo "Updating $VERSION to $NEW_TAG"
    git tag -m '' -a $NEW_TAG
    echo "Tagged with $NEW_TAG"
    git push --tags
else
    echo "Already a tag on this commit ($VERSION)"
fi
